#!/usr/bin/perl
use warnings;
use strict;
use Getopt::Std;
use DBI;

# Current database version
my $thisversion = "1.0.0";

my $usage = "Usage: dbsetup -h hostname -d database -u user -p password";

sub usage {
	print $usage,"\n",$_[0],"\n";
	exit 1;
}

my $opts = {};
getopts("u:p:h:d:", $opts) or usage "Bad options";

my $database = $opts->{d} || usage "Need database";
my $hostname = $opts->{h} || "localhost";
my $username = $opts->{u} || usage "Need username";
my $password = $opts->{p};
usage "Need password" unless defined $password;	# Could be blank

# Connect to database
my $dbh = DBI->connect(
	"DBI:mysql:database=$database;host=$hostname",
	$username, $password,
	{ RaiseError => 1 },
) or die "Cannot connect to database";

# Create version table if it doesn't exist
eval { $dbh->do("SELECT * FROM dbversion WHERE version='$thisversion' AND name='eminfo-sqs2db' LIMIT 1") };
if ($@) {
	my $file="create.sql";
	if (-e $file){
	    print "** Creating tables on version $thisversion\n";
	    print "     Using $file for installation...\n";
	    my $p = "-p$password" if $password;	# Not required if password is blank
	    system("mysql -u $username $p -D$database -h$hostname < $file") == 0 or die "Installation from $file failed";
	}
	else{
	    die "No installation sql-script found!";
	}

	print "** Updating version table\n";
	$dbh->do("INSERT dbversion SET name='eminfo-sqs2db', version='$thisversion';");

	print "Done!\n";
} else {
    print "*** Database v=$thisversion already installed\n";
    exit 0;
}
