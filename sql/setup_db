#!/usr/bin/perl
use Getopt::Std;
use DBI;

# Current database version
my $thisversion = "1.0.1";

my $usage = "Usage: $0 -h hostname -P port -d database -u user -p password";

sub usage {
	print $usage,"\n",$_[0],"\n";
	exit 1;
}

my $opts = {};
getopts("u:p:h:d:P:", $opts) or usage "Bad options";

my $hostname = $opts->{h} || "localhost";
my $dataport = $opts->{P} || "3306";
my $database = $opts->{d} || usage "Need database";
my $username = $opts->{u} || usage "Need username";
my $password = $opts->{p};
usage "Need password" unless defined $password;	# Could be blank

# Connect to database
my $dbh = DBI->connect(
	"DBI:mysql:database=$database;host=$hostname;port=$dataport",
	$username, $password,
	{ RaiseError => 1, PrintError => 0 },
) or die "Cannot connect to database: [$hostname:$dataport]",DBI->errstr;

# Create version table if it doesn't exist
eval { $dbh->do("SELECT * FROM dbversion WHERE version='$thisversion' AND name='eminfo-sqs2db' LIMIT 1") };
if ($@) {

	my $file="eminfo.sql";
	my $trigger="eminfo.trg";

	if (-e $file){
	    print "** Creating tables on version $thisversion\n";
	    print "     Using $file for installation...\n";
	    my $p = "-p$password" if $password;	# Not required if password is blank
	    system("mysql -u $username $p -D$database -h$hostname -P$dataport < $file") == 0 or die "Installation from $file failed";
	}else{
	    die "No installation sql-script found!";
	}

	if (-e $trigger){
	    print "** Creating triggers on version $thisversion\n";
	    print "     Using $trigger for creating...\n";
	    my $t = "-p$password" if $password; # Not required if password is blank
	    system("mysql -u $username $t -D$database -h$hostname -P$dataport < $trigger") == 0 or die "Creating from $trigger failed";
	}else{
	   die "No trigger sql-script found!";
	}
	
	print "** Updating version table\n";
	$dbh->do("INSERT dbversion SET name='eminfo-sqs2db', version='$thisversion';");

	print "Done!\n";
} else {
    print "*** Database v=$thisversion already installed\n";
    exit 0;
}
